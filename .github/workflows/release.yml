name: Release CloudSync

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create addon zip
      run: |
        cd service.cloudsync
        zip -r ../service.cloudsync-${{ steps.get_version.outputs.VERSION }}.zip . -x "*.pyc" "*/__pycache__/*"

    - name: Create repository zip
      run: |
        cd repository.cloudsync
        zip -r ../repository.cloudsync.zip . -x "*.pyc" "*/__pycache__/*"

    - name: Generate checksums and update repository
      run: |
        md5sum service.cloudsync-${{ steps.get_version.outputs.VERSION }}.zip > service.cloudsync-${{ steps.get_version.outputs.VERSION }}.zip.md5
        md5sum repository.cloudsync.zip > repository.cloudsync.zip.md5

        # Update repository files
        python generate_repository.py

    - name: Commit updated repository files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check if there are changes to commit
        if ! git diff --quiet addons.xml addons.xml.md5 repository.cloudsync/ 2>/dev/null; then
          echo "Repository files have been updated, committing changes..."
          git add addons.xml addons.xml.md5 repository.cloudsync/ || true
          git commit -m "Auto-update repository files for v${{ steps.get_version.outputs.VERSION }}" || true
          git push origin main || true
          echo "Repository files updated and pushed to main branch"
        else
          echo "No repository file changes to commit"
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          service.cloudsync-${{ steps.get_version.outputs.VERSION }}.zip
          service.cloudsync-${{ steps.get_version.outputs.VERSION }}.zip.md5
          repository.cloudsync.zip
          repository.cloudsync.zip.md5
          repository.cloudsync/addons.xml
          repository.cloudsync/addons.xml.md5
        name: CloudSync v${{ steps.get_version.outputs.VERSION }}
        body: |
          ## CloudSync v${{ steps.get_version.outputs.VERSION }}

          ### Installation Options

          **Option 1: Direct Install**
          - Download `service.cloudsync-${{ steps.get_version.outputs.VERSION }}.zip`
          - Install via Kodi ‚Üí Install from zip file

          **Option 2: Repository Install (Recommended for auto-updates)**
          - Download `repository.cloudsync.zip`
          - Install repository in Kodi first
          - Then install CloudSync from repository

          ### Features
          - ‚ú® Simple Web Setup - Easy OAuth2 setup from any device on your network
          - üì± Mobile QR Setup - Quick setup using QR codes
          - üîÑ Automatic Updates - When installed from repository
          - ‚òÅÔ∏è Dropbox Sync - Watched status, resume points, favorites, UserData files
          - üóúÔ∏è GZIP Compression - Up to 90% data transfer reduction

          ### Setup
          1. Go to addon settings
          2. Choose "‚ú® Simple Web Setup (Best)"
          3. Complete setup in your browser

          **Full documentation:** [README.md](https://github.com/${{ github.repository }})
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}